# Continuous Integration (CI) pipeline that orchestrates the deployment of the autoencoder model.

# Runtime parameters to select artifacts
parameters:
- name : artifactBuildId
  displayName: Model Train CI Build ID. Default is 'latest'.
  type: string
  default: latest

pr: none

# Trigger this pipeline on model-train pipeline completion
trigger: none
resources:
  containers:
  - container: mlops
    image: mcr.microsoft.com/mlops/python:latest
  pipelines:
  - pipeline: model-train-ci
    source: PROD-Training_and_Registration_Pipeline # Name of the triggering pipeline
    trigger:
      branches:
        include:
        - main

variables:
- template: mlops-variables-template.yml
- group: devopsforai-aml-vg

stages:
- stage: 'Download_Model_Package'
  displayName: 'Download Model Package'
  condition: variables['ACI_DEPLOYMENT_NAME']
  variables:
    - group: azureml-variables
  jobs:
  - job: "Get_Package"
    displayName: "Deploy to ACI"
    container: mlops
    timeoutInMinutes: 0
    steps:
    - download: none
    - template: autoencoder-get-model-id-artifact-template.yml
      parameters:
        projectId: '$(resources.pipeline.model-train-ci.projectID)'
        pipelineId: '$(resources.pipeline.model-train-ci.pipelineID)'
        artifactBuildId: ${{ parameters.artifactBuildId }}
    - task: AzureCLI@1
      displayName: "Set Env Vars"
      inputs:
        azureSubscription: '$(WORKSPACE_SVC_CONNECTION)'
        scriptLocation: inlineScript
        workingDirectory: $(Build.SourcesDirectory)/$(SOURCES_DIR_TRAIN)/scoring
        inlineScript: |
          echo "##vso[task.setvariable variable=MODEL_NAME]$(get_model.MODEL_NAME)"
          echo "##vso[task.setvariable variable=MODEL_VERSION]$(get_model.MODEL_VERSION)"
        name: 'set_model_vars'
  
    - task: AzureCLI@1
      displayName: 'Download Model Package (Artifacts and Dockerfile)'
      inputs:
        azureSubscription: '$(WORKSPACE_SVC_CONNECTION)'
        scriptLocation: inlineScript
        workingDirectory: $(Build.SourcesDirectory)/03-AML_AzDO_MLOpsDevelopment
        inlineScript: |
          set -e # fail on error
          python -m CreateModelPackage
    - publish: $(Build.SourcesDirectory)/03-AML_AzDO_MLOpsDevelopment/docker
      artifact: modelpackage
    
- stage: 'Build_and_Push_Image'
  displayName: 'Build and Push Model Image to ACR'
  jobs:
    - job: 'Build_and_push_image'
      steps:
        - task: DownloadBuildArtifacts@1
          inputs:
            artifactName: modelpackage
            buildType: 'current'
            downloadType: 'single'
            downloadPath: '$(System.ArtifactsDirectory)'
        - task: Docker@2
          inputs:
            containerRegistry: 'acrserviceconn2'
            repository: 'autoencoder'
            command: 'buildAndPush'
            Dockerfile: '$(System.ArtifactsDirectory)/Dockerfile'
        - task: Docker@2
          inputs:
            containerRegistry: 'acrserviceconn2'
            repository: 'autoencoder'
            command: 'buildAndPush'
            Dockerfile: '$(System.ArtifactsDirectory)/Dockerfile'
            tags: 'latest'
