# Continuous Integration (CI) pipeline that orchestrates the deployment of the autoencoder model.

# Runtime parameters to select artifacts
parameters:
- name : artifactBuildId
  displayName: Model Train CI Build ID. Default is 'latest'.
  type: string
  default: latest

pr: none

# Trigger this pipeline on model-train pipeline completion
trigger: none
resources:
  containers:
  - container: mlops
    image: mcr.microsoft.com/mlops/python:latest
  pipelines:
  - pipeline: model-train-ci
    source: PROD-Training_and_Registration_Pipeline # Name of the triggering pipeline
    trigger:
      branches:
        include:
        - main

variables:
- template: mlops-variables-template.yml
- group: devopsforai-aml-vg

stages:
- stage: 'Deploy_ACI'
  displayName: 'Deploy to ACI'
  condition: variables['ACI_DEPLOYMENT_NAME']
  variables:
    - group: azureml-variables
  jobs:
  - job: "Deploy_ACI"
    displayName: "Deploy to ACI"
    container: mlops
    timeoutInMinutes: 0
    steps:
    - download: none
    - template: autoencoder-get-model-id-artifact-template.yml
      parameters:
        projectId: '$(resources.pipeline.model-train-ci.projectID)'
        pipelineId: '$(resources.pipeline.model-train-ci.pipelineID)'
        artifactBuildId: ${{ parameters.artifactBuildId }}
    - task: AzureCLI@1
      displayName: 'Install AzureML CLI'
      inputs:
        azureSubscription: '$(WORKSPACE_SVC_CONNECTION)'
        scriptLocation: inlineScript
        workingDirectory: $(Build.SourcesDirectory)
        inlineScript: 'az extension add --source https://azurecliext.blob.core.windows.net/release/azure_cli_ml-1.27.0-py3-none-any.whl --yes'
    - task: AzureCLI@1
      displayName: "Deploy to ACI (CLI)"
      inputs:
        azureSubscription: '$(WORKSPACE_SVC_CONNECTION)'
        scriptLocation: inlineScript
        workingDirectory: $(Build.SourcesDirectory)/$(SOURCES_DIR_TRAIN)/scoring
        inlineScript: |
          set -e # fail on error
          
          az ml model deploy --name $(ACI_DEPLOYMENT_NAME) --model '$(get_model.MODEL_NAME):$(get_model.MODEL_VERSION)' \
          --ic inference_config.yml \
          --dc deployment_config_aci.yml \
          -g $(RESOURCE_GROUP) --workspace-name $(WORKSPACE_NAME) \
          --overwrite -v --ae True
          export MODEL_NAME="$(get_model.MODEL_NAME)"
          export MODEL_VERSION="$(get_model.MODEL_VERSION)"

    - task: AzureCLI@1
      displayName: 'Smoke test'
      inputs:
        azureSubscription: '$(WORKSPACE_SVC_CONNECTION)'
        scriptLocation: inlineScript
        workingDirectory: $(Build.SourcesDirectory)/$(SOURCES_DIR_TRAIN)/scoring
        inlineScript: |
          set -e # fail on error
          export SUBSCRIPTION_ID=$(az account show --query id -o tsv)
          python -m smoke_test_scoring_service --type ACI --service "$(ACI_DEPLOYMENT_NAME)"
    - task: AzureCLI@1
      displayName: 'Download Model Package (Artifacts and Dockerfile)'
      inputs:
        variables:
          MODEL_NAME: $(get_model.MODEL_NAME)
          MODEL_VERSION: $(get_model.MODEL_VERSION)
        azureSubscription: '$(WORKSPACE_SVC_CONNECTION)'
        scriptLocation: inlineScript
        workingDirectory: $(Build.SourcesDirectory)/03-AML_AzDO_MLOpsDevelopment
        inlineScript: |
          set -e # fail on error
          python -m CreateModelPackage